version: '3.8'

services:
  # State Management Infrastructure
  langgraph-postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: langgraph
      POSTGRES_USER: langgraph
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "langgraph"]
      interval: 10s
      timeout: 5s
      retries: 5

  langgraph-redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 1s
      retries: 5

  # Main LangGraph Multi-Agent API
  langgraph-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      langgraph-postgres:
        condition: service_healthy
      langgraph-redis:
        condition: service_healthy
    environment:
      POSTGRES_URI: postgres://langgraph:${POSTGRES_PASSWORD}@langgraph-postgres:5432/langgraph
      REDIS_URI: redis://langgraph-redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
      LANGGRAPH_WORKERS: 4
      MAX_CONCURRENT_AGENTS: 10
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '2.0'

volumes:
  postgres-data:
  redis-data: